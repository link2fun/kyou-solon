package com.github.link2fun.system.modular.config.model.vo;


import com.easy.query.core.annotation.Column;
import com.easy.query.core.annotation.UpdateIgnore;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;
import com.github.link2fun.support.annotation.Excel;
import lombok.Data;

import java.time.LocalDateTime;

/**
 * this file automatically generated by easy-query struct dto mapping
 * 当前文件是easy-query自动生成的 结构化dto 映射
 * {@link com.github.link2fun.system.modular.config.model.SysConfig }
 *
 * @author easy-query
 */
@Data
public class SysConfigDetailVO {


  /** 参数主键 */
  @Excel(name = "参数主键", cellType = Excel.ColumnType.NUMERIC)
  @JsonSerialize(using = ToStringSerializer.class)
  @Column(value = "config_id")
  private Long configId;
  /** 参数名称 */
  @Excel(name = "参数名称")
  @Column("config_name")
  private String configName;
  /** 参数键名 */
  @Excel(name = "参数键名")
  @Column("config_key")
  private String configKey;
  /** 参数键值 */
  @Excel(name = "参数键值")
  @Column("config_value")
  private String configValue;
  /** 系统内置（Y是 N否） */
  @Excel(name = "系统内置", readConverterExp = "Y=是,N=否")
  @Column("config_type")
  private String configType;
  /** 备注 */
  @Column(value = "remark")
  private String remark;
  /** 创建者 */
  @UpdateIgnore
  @Column(value = "create_by")
  private String createBy;
  /** 创建时间 */
  @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
  @UpdateIgnore
  @Column(value = "create_time")
  private LocalDateTime createTime;
  /** 更新者 */
  @Column(value = "update_by")
  private String updateBy;
  /** 更新时间 */
  @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
  @Column(value = "update_time")
  private LocalDateTime updateTime;


}
